import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:studentapp/application/temp.dart';
import 'package:studentapp/domain/repositories/firebase_repository.dart';
import 'package:studentapp/firebase_options.dart';

class FirebaseRepositoryImpl implements FirebaseRepository {
  static String _fcmToken = '';

  @override
  get fcmToken async {
    if (_fcmToken != '') {
      return _fcmToken;
    }
    FirebaseMessaging.instance.requestPermission();
    _fcmToken = await FirebaseMessaging.instance.getToken() ?? '';
    return _fcmToken;
  }

  @override
  Future<void> initFirebaseApp() async {
    await Firebase.initializeApp(
      options: DefaultFirebaseOptions.currentPlatform,
    );
  }

  @override
  void configureFCMListeners() {
    // FirebaseMessaging.onMessage.listen((RemoteMessage message) async {
    //   RemoteNotification notification = message.notification!;
    //   AndroidNotification android = message.notification!.android!;
    //
    //   // If `onMessage` is triggered with a notification, construct our own
    //   // local notification to show to users using the created channel.
    //   final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
    //       FlutterLocalNotificationsPlugin();
    //
    //   await flutterLocalNotificationsPlugin
    //       .resolvePlatformSpecificImplementation<
    //           AndroidFlutterLocalNotificationsPlugin>()
    //       ?.createNotificationChannel('channel');
    //   if (notification != null && android != null) {
    //     flutterLocalNotificationsPlugin.show(
    //         notification.hashCode,
    //         notification.title,
    //         notification.body,
    //         NotificationDetails(
    //           android: AndroidNotificationDetails(
    //             'channel.id',
    //             'channel.name',
    //             icon: android.smallIcon,
    //             // other properties...
    //           ),
    //         ));
    //   }
    // });
    FirebaseMessaging.onMessage.listen((RemoteMessage message) {
      if (message.notification != null) {
        // print('Message also contained a notification: ${message.notification}');
      }
      NotificationApi.pushNotification(message);
    });
    // FirebaseMessaging.onBackgroundMessage((message) => {});
  }
}
